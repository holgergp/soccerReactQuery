{"version":3,"sources":["DndItemTypes.js","components/LeagueTable/SampleData.js","components/LeagueTable/Positions.js","components/LeagueTable/leagueTableSlice.js","components/Team/Team.js","components/Position/Position.js","components/LeagueTable/LeagueTable.js","components/store.js","components/App.js","registerServiceWorker.js","index.js"],"names":["ItemTypes","findTeamIndex","teamId","positions","findIndex","team","id","initialState","name","editing","leagueTableSlice","createSlice","reducers","swapPositions","state","action","console","log","sourceTeamId","targetTeamId","currentPositions","clonedPositions","sourceInfo","targetInfo","map","index","find","pos","recalculateSwappedPositions","payload","updateTeamname","updatedText","teamIndex","recalculatePositionsWithRenamedTeam","actions","Team","props","rank","dispatch","useDispatch","dragReturn","useDrag","type","item","end","monitor","didDrop","dragItem","getItem","dropResult","getDropResult","classes","classNames","positionNumber","className","style","cursor","ref","onChange","evt","target","value","role","html","autoFocus","maxLength","disabled","Position","dropReturn","useDrop","accept","drop","LeagueTable","useSelector","leagueTable","DndProvider","backend","HTML5Backend","Col","md","Card","bg","Header","Title","Body","store","configureStore","reducer","leagueTableReducer","queryClient","QueryClient","App","Container","Row","client","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e265d484.chunk.js","sourcesContent":["export const ItemTypes = {\n  TEAM: 'team',\n};\n","export const SAMPLE_LEAGUE_TABLE = [\n  {\n    name: 'Borussia Mönchengladbach',\n    editing: true,\n    id: 'BMG',\n  },\n  {\n    name: 'Borussia Dortmund',\n    editing: true,\n    id: 'BVB',\n  },\n  {\n    name: 'FC Bayern München',\n    editing: true,\n    id: 'FCB',\n  },\n  {\n    name: 'VFL Wolfsburg',\n    editing: true,\n    id: 'VFL',\n  },\n  {\n    name: 'Bayer Leverkusen',\n    editing: true,\n    id: 'B04',\n  },\n  {\n    name: 'FC Schalke 04',\n    editing: true,\n    id: 'S04',\n  },\n  {\n    name: 'Hertha BSC Berlin',\n    editing: true,\n    id: 'BSC',\n  },\n  {\n    name: '1. FC Köln',\n    editing: true,\n    id: '1FC',\n  },\n  {\n    name: 'FC Ingolstadt',\n    editing: true,\n    id: 'FCI',\n  },\n  {\n    name: 'Darmstadt 98',\n    editing: true,\n    id: 'D98',\n  },\n  {\n    name: 'Hamburger SV',\n    editing: true,\n    id: 'HSV',\n  },\n  {\n    name: 'Eintracht Frankfurt',\n    editing: true,\n    id: 'SGE',\n  },\n  {\n    name: 'Werder Bremen',\n    editing: true,\n    id: 'SVW',\n  },\n  {\n    name: 'Hoffenheim',\n    editing: true,\n    id: 'SAP',\n  },\n  {\n    name: 'FC Augsburg',\n    editing: true,\n    id: 'FCA',\n  },\n  {\n    name: 'Hannover 96',\n    editing: true,\n    id: 'H96',\n  },\n  {\n    name: 'Mainz 05',\n    editing: true,\n    id: 'M05',\n  },\n  {\n    name: 'VFB Stuttgart',\n    editing: true,\n    id: 'VFB',\n  },\n];\n","const findTeamIndex = (teamId, positions) =>\n  positions.findIndex((team) => team.id === teamId);\n\nconst findTeam = (teamId, positions) =>\n  positions.find((team) => team.id === teamId);\n\nexport const recalculateSwappedPositions = (\n  sourceTeamId,\n  targetTeamId,\n  currentPositions\n) => {\n  const clonedPositions = [...currentPositions];\n\n  const [sourceInfo, targetInfo] = [sourceTeamId, targetTeamId].map((id) => ({\n    index: findTeamIndex(id, clonedPositions),\n    team: findTeam(id, clonedPositions),\n  }));\n\n  return currentPositions.map((pos, index) => {\n    if (index === targetInfo.index) {\n      return { ...sourceInfo.team };\n    } else if (index === sourceInfo.index) {\n      return { ...targetInfo.team };\n    } else return { ...pos };\n  });\n};\n\nexport const recalculatePositionsWithRenamedTeam = (\n  team,\n  updatedText,\n  currentPositions\n) => {\n  const teamIndex = findTeamIndex(team.id, currentPositions);\n\n  return currentPositions.map((pos, index) => ({\n    ...pos,\n    name: teamIndex === index ? updatedText : pos.name,\n  }));\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport { SAMPLE_LEAGUE_TABLE } from './SampleData';\nimport {\n  recalculatePositionsWithRenamedTeam,\n  recalculateSwappedPositions,\n} from './Positions';\n\nconst initialState = {\n  positions: SAMPLE_LEAGUE_TABLE,\n};\n\nexport const leagueTableSlice = createSlice({\n  name: 'leagueTable',\n  initialState,\n  reducers: {\n    swapPositions: (state, action) => {\n      console.log('state', state.positions);\n      state.positions = recalculateSwappedPositions(\n        action.payload.sourceTeamId,\n        action.payload.targetTeamId,\n        state.positions\n      );\n    },\n    updateTeamname: (state, action) => {\n      state.positions = recalculatePositionsWithRenamedTeam(\n        action.payload.team,\n        action.payload.updatedText,\n        state.positions\n      );\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { swapPositions, updateTeamname } = leagueTableSlice.actions;\n\nexport default leagueTableSlice.reducer;\n","import { useDrag } from 'react-dnd';\nimport React from 'react';\nimport { ItemTypes } from '../../DndItemTypes';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport ContentEditable from 'react-contenteditable';\nimport { useDispatch } from 'react-redux';\nimport { updateTeamname, swapPositions } from '../LeagueTable/leagueTableSlice';\n\nconst calculatePositionCssClass = (positionNumber) => {\n  if (positionNumber === 1) {\n    return 'tabellenfuehrerClass tabelleClass';\n  }\n  if (positionNumber <= 3) {\n    return 'championsLeagueClass tabelleClass';\n  }\n  if (positionNumber <= 6) {\n    return 'europaLeagueClass tabelleClass';\n  }\n  if (positionNumber <= 15) {\n    return 'mittelfeldClass tabelleClass';\n  }\n  if (positionNumber === 16) {\n    return 'relegationClass tabelleClass';\n  } else {\n    return 'abstiegClass tabelleClass';\n  }\n};\n\nconst Team = (props) => {\n  const { rank, team } = props;\n  const dispatch = useDispatch();\n  const dragReturn = useDrag({\n    type: ItemTypes.TEAM,\n    item: { team },\n    end: (item, monitor) => {\n      if (!monitor.didDrop()) {\n        return;\n      }\n      const dragItem = monitor.getItem();\n      const dropResult = monitor.getDropResult();\n      dispatch(\n        swapPositions({\n          sourceTeamId: dragItem.team.id,\n          targetTeamId: dropResult.team.id,\n        })\n      );\n    },\n  });\n\n  const classes = classNames(\n    'col-md-12',\n    'btn',\n    'text-bold',\n    calculatePositionCssClass(rank)\n  );\n\n  const onChange = (evt) => {\n    dispatch(updateTeamname({ team, updatedText: evt.target.value }));\n  };\n\n  return (\n    <div className={classes} style={{ cursor: 'pointer' }} ref={dragReturn[1]}>\n      <ContentEditable\n        onChange={onChange}\n        role={'button'}\n        className=\"textPointer\"\n        html={team.name}\n        autoFocus={true}\n        maxLength={200}\n        disabled={!team.editing}\n      />\n    </div>\n  );\n};\n\nTeam.propTypes = {\n  rank: PropTypes.number.isRequired,\n  team: PropTypes.object.isRequired,\n};\n\nexport default Team;\n","import React from 'react';\nimport { useDrop } from 'react-dnd';\nimport Team from '../Team/Team';\nimport PropTypes from 'prop-types';\nimport { ItemTypes } from '../../DndItemTypes';\n\nconst Position = (props) => {\n  const team = props.team;\n  const rank = props.rank;\n  const dropReturn = useDrop({\n    accept: ItemTypes.TEAM,\n    drop: () => ({ team }),\n  });\n  return (\n    <div ref={dropReturn[1]}>\n      <Team team={team} rank={rank} />\n    </div>\n  );\n};\n\nPosition.propTypes = {\n  rank: PropTypes.number.isRequired,\n  team: PropTypes.object.isRequired,\n};\n\nexport default Position;\n","import React from 'react';\nimport Position from '../Position/Position';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { Card, Col } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\n\nconst LeagueTable = () => {\n  //const [positions, setPositions] = useState(SAMPLE_LEAGUE_TABLE);\n  const positions = useSelector((state) => state.leagueTable.positions);\n  /**\n  const { isLoading, error } = useQuery('sampleData', getSampleData, {\n    onSuccess: setPositions,\n  });\n  if (isLoading) {\n    return 'Loading...';\n  }\n\n  if (error) {\n    return 'An error has occurred: ' + error.message;\n  }**/\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Col md={6}>\n        <Card bg=\"dark\">\n          <Card.Header role={'heading'}>\n            <Card.Title>Ligatabelle zum Selberstecken</Card.Title>\n          </Card.Header>\n          <Card.Body>\n            {positions.map((team, index) => (\n              <Position team={team} rank={index + 1} key={index} />\n            ))}\n          </Card.Body>\n        </Card>\n      </Col>\n    </DndProvider>\n  );\n};\n\nexport default LeagueTable;\n","import { configureStore } from '@reduxjs/toolkit';\nimport leagueTableReducer from './LeagueTable/leagueTableSlice';\n\nexport const store = configureStore({\n  reducer: {\n    leagueTable: leagueTableReducer,\n  },\n});\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport { Row, Container } from 'react-bootstrap';\nimport LeagueTable from './LeagueTable/LeagueTable';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nconst queryClient = new QueryClient();\n\nconst App = () => {\n  return (\n    <div className=\"index\">\n      <Container>\n        <Row>\n          <Provider store={store}>\n            <QueryClientProvider client={queryClient}>\n              <LeagueTable />\n            </QueryClientProvider>\n          </Provider>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}